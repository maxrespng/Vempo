import { Controller } from "@hotwired/stimulus"

// Connects to data-controller="microphone"
export default class extends Controller {
  connect() {
  }
  constructor() {
    this.initialized = false;
    navigator.mediaDevices.getUserMedia({auto:true})
    .then(function ( stream) {
        this.audioContext = new AudioContext();
        this.microphone= this.audioContext.createMediaElementSource(stream);
        this.analyser = this.audioContext.createAnalyser();
        this.analyser.fftSize = 512;
        const bufferLength = this.analyser.frequencyBinCount;
        this.dataArray = new Uint8Array(bufferLength);
        this.microphone.connect(this.analyser);
        this.initialized = true;
    }.bind(this)).catch(function(err) {
      alert(err);
    });
  }

  getSamples(){
        this.analyser.getByteTimeDomainData(this.dataArray);
        let norSamples = [...this.dataArray].map(e => e/128 -1);
        return norSamples;
  }

  getVolume(){
    this.analyser.getByteTimeDomainData(this.dataArray);
    let norSamples = [...this.dataArray].map(e => e/128 -1);
    let sum = 0;
    for ( let i = 0; i < norSamples.length; i++){
      sum += norSamples[i] * norSamples[i];
    }
    let volume = Math.sqrt(sum / norSamples.length);
    return volume;
  }
}
