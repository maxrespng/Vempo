<div data-controller="new-shape load-shapes delete-shape" data-new-shape-url-value="<%= shapes_url %>" data-load-shapes-shape-info-value="<%= @shapes.to_json() %>" data-delete-shape-all-shapes-value="<%= @shapes.to_json() %>">

  <div class="parent"  data-load-shapes-project-id-value="<%= @project.id %>">
    <div class="" id="myCanvas" data-action="mousedown->new-shape#mouseDown mouseup->new-shape#mouseUp click->delete-shape#deleteShape" data-new-shape-target="p5Canvas" data-delete-shape-target="canvas">
  </div>
  <script> function setup() {
    const canvas = createCanvas(displayWidth,displayHeight);

      canvas.parent('myCanvas')
      console.log('canvas');
  }
  </script>

  <div class="side-bar child" data-new-shape-target="checkboxes">
    <div class="form-check" data-new-shape-target="checkbox" data-action="click->new-shape#handleCheckboxClick" data-shape="triangle">
      <input class="form-check-input" type="checkbox" value="" id="triangle" >
      <label class="form-check-label" for="triangle">
        Triangle
      </label>
    </div>

    <div class="form-check" data-new-shape-target="checkbox" data-action="click->new-shape#handleCheckboxClick" data-shape="circle" >
      <input class="form-check-input" type="checkbox" value="" id="circle">
      <label class="form-check-label" for="circle">
        Circle
      </label>
    </div>

    <div class="form-check" data-new-shape-target="checkbox" data-action="click->new-shape#handleCheckboxClick" data-shape="square">
      <input class="form-check-input"  type="checkbox" value="" id="square">
      <label class="form-check-label" for="square">
        Square
      </label>
    </div>

    <div class="form-check" data-new-shape-target="checkbox" data-action="click->new-shape#handleCheckboxClick"  data-shape="oval">
      <input class="form-check-input" type="checkbox" value="" id="oval">
      <label class="form-check-label" for="oval">
        Oval
      </label>
    </div>

    <div class="form-check" data-new-shape-target="checkbox" data-action="click->new-shape#handleCheckboxClick" data-shape="rectangle">
      <input class="form-check-input"  type="checkbox" value="" id="rectangle">
      <label class="form-check-label" for="rectangle">
        Rectangle
      </label>
    </div>

          <%# <% if @project.music_file == nil %>
        <div class="bottom-microphone" >
            <button
            data-controller="microphone"
                    data-action="click->new-shape#requestMicrophoneAccess">

              <i class="fa-solid fa-microphone"></i>
            </button>

            <button data-action="click->new-shape#stopRecording">
              <i class="fa-solid fa-microphone-slash"></i>
            </button>
        </div>

          <%# <% end %>


      <button data-controller="last" data-action="click->delete-shape#canDelete click->new-shape#cannotDraw">Delete</button>

      <%# START OF FORM %>

    <div class="hidden-form">
      <%= simple_form_for((@shape), data: { new_shape_target: "formElement"}) do |f| %>
      <%= f.input :start_x, input_html: { data: {new_shape_target: "input1"} } %>
      <%= f.input :start_y, input_html: { data: {new_shape_target: "input2"} } %>
      <%= f.input :width, input_html: { data: {new_shape_target: "input3"} } %>
      <%= f.input :height, input_html: { data: {new_shape_target: "input4"} } %>
      <%= f.input :project_id, input_html: { data: {new_shape_target: "projectId"}, value: @project.id } %>
      <div><%= f.submit %></div>
      <% end %>
    </div>

    <%# END OF FORM %>
    <div>
      <input type="color" data-new-shape-target="colorPicker">
    </div>

    <div class="screenshot" data-controller="screenshot">
    <button class="btn btn-primary btn-lg" data-action="click->screenshot#screenshot">Screenshot</button>
      <%= simple_form_for(@project, data: { screenshot_target: "submit" }) do |f| %>
      <%= f.input :svg, input_html: { data: { screenshot_target: "photo" }, style: "display:none;"   } %>
        <%# <%= f.submit, input_html: { data: { screenshot_target: "submit" }, style: "display:none;" } %>
      <% end %>
    </div>

  </div>

</div>




<%# <div id="content">
  <input type="file" id="thefile" accept="audio/*" />
  <canvas id="canvas"></canvas>
  <audio id="audio" controls></audio>
</div>
<script>
window.onload = function() {

  var file = document.getElementById("thefile");
  var audio = document.getElementById("audio");

  file.onchange = function() {
    var files = this.files;
    audio.src = URL.createObjectURL(files[0]);
    audio.load();
    audio.play();
    var context = new AudioContext();
    var src = context.createMediaElementSource(audio);
    var analyser = context.createAnalyser();

    var canvas = document.getElementById("canvas");
    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;
    var ctx = canvas.getContext("2d");

    src.connect(analyser);
    analyser.connect(context.destination);

    analyser.fftSize = 256;

    var bufferLength = analyser.frequencyBinCount;
    console.log(bufferLength);

    var dataArray = new Uint8Array(bufferLength);

    var WIDTH = canvas.width;
    var HEIGHT = canvas.height;

    var barWidth = (WIDTH / bufferLength) * 2.5;
    var barHeight;
    var x = 0;

    function renderFrame() {
      requestAnimationFrame(renderFrame);

      x = 0;

      analyser.getByteFrequencyData(dataArray);

      ctx.fillStyle = "#000";
      ctx.fillRect(0, 0, WIDTH, HEIGHT);

      for (var i = 0; i < bufferLength; i++) {
        barHeight = dataArray[i];

        var r = barHeight + (25 * (i/bufferLength));
        var g = 250 * (i/bufferLength);
        var b = 50;

        ctx.fillStyle = "rgb(" + r + "," + g + "," + b + ")";
        ctx.fillRect(x, HEIGHT - barHeight, barWidth, barHeight);

        x += barWidth + 1;
      }
    }

    audio.play();
    renderFrame();
  };
};
</script> %>
